{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAc3CF,EAAKM,iBAAiB,UAAWC,IAC/BA,EAAEC,iBACF,IAAIC,EAAaC,OAAOP,EAAWQ,OAC/BC,EAAYF,OAAON,EAAUO,OAC7BE,EAAcH,OAAOL,EAAYM,OACrCG,QAAQC,IAAI,C,WAACN,E,UAAYG,E,YAAWC,IACpC,IAAIG,EAAmB,EACvBC,aAAY,KAEV,GADAD,GAAoB,EACjBA,EAAmBH,EACpB,OAEF,IAAIK,EAAWF,EACXG,EAAQV,EACZU,GAASP,EACTQ,YAAW,KA3Bf,IAAuBC,EAAUC,GAAVD,EA4BHH,EA5BaI,EA4BHH,EA3BrB,IAAII,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,KACLM,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GACvBA,EAAM,KAqBPO,MAAK,EAACR,SAACA,EAAQC,MAAEA,MAChBxB,EAAAgC,OAAOC,QAAQ,uBAAqBV,QAAiBC,MAAU,IAEhEU,OAAM,EAACX,SAACA,EAAQC,MAAEA,MACjBxB,EAAAgC,OAAOG,QAAQ,sBAAoBZ,QAAeC,MAAU,GAC5D,GACDb,EAAW,GACbG,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }}, delay);\n  });\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  let valueDelay = Number(inputDelay.value);\n  let valueStep = Number(inputStep.value);\n  let valueAmount = Number(inputAmount.value);\n  console.log({valueDelay, valueStep, valueAmount});\n  let inputAmountTotal = 0;\n  setInterval(() => {\n    inputAmountTotal += 1;\n    if(inputAmountTotal > valueAmount){\n      return\n    };\n    let position = inputAmountTotal;\n    let delay = valueDelay;\n    delay += valueStep;\n    setTimeout(() => { \n      createPromise(position, delay)\n      .then(({position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }, valueDelay);\n  }, valueStep);\n})"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","addEventListener","e","preventDefault","valueDelay","Number","value","valueStep","valueAmount","console","log","inputAmountTotal","setInterval","position1","delay1","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.aad7e343.js.map"}