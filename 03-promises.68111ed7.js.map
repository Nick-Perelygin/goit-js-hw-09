{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAc3CF,EAAKM,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBACF,IAAIC,EAAaC,OAAOP,EAAWQ,OAC/BC,EAAYF,OAAON,EAAUO,OAC7BE,EAAcH,OAAOL,EAAYM,OACrCG,QAAQC,IAAI,CAACN,aAAYG,YAAWC,gBACpC,IAAIG,EAAmB,EACvBC,aAAY,WAEV,MADAD,GAAoB,GACEH,GAAtB,CAGA,IAAIK,EAAWF,EACXG,EAAQV,EACZU,GAASP,EACTQ,YAAW,WA3Bf,IAAuBC,EAAUC,GAAVD,EA4BHH,EA5BaI,EA4BHH,EA3BrB,IAAII,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,WACLM,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAChBA,E,KAqBDO,MAAK,SAAAC,G,IAAET,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAChBxB,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DY,OAAM,SAAAJ,G,IAAET,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBxB,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,MAE3Db,EAbD,C,GAcDG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }}, delay);\n  });\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  let valueDelay = Number(inputDelay.value);\n  let valueStep = Number(inputStep.value);\n  let valueAmount = Number(inputAmount.value);\n  console.log({valueDelay, valueStep, valueAmount});\n  let inputAmountTotal = 0;\n  setInterval(() => {\n    inputAmountTotal += 1;\n    if(inputAmountTotal > valueAmount){\n      return\n    };\n    let position = inputAmountTotal;\n    let delay = valueDelay;\n    delay += valueStep;\n    setTimeout(() => { \n      createPromise(position, delay)\n      .then(({position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }, valueDelay);\n  }, valueStep);\n})\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","e","preventDefault","valueDelay","Number","value","valueStep","valueAmount","console","log","inputAmountTotal","setInterval","position1","delay1","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.68111ed7.js.map"}